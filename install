import os

def run_command(command):
    print(f"Running command: {command}")
    os.system(command)

def get_user_input(prompt):
    return input(prompt).strip()

def main():
    print("Welcome to the Magenta Linux Installer!")

    # Выбор диска
    disk = get_user_input("Enter the disk path (e.g., /dev/sda): ")

    # Разметка диска
    print("Please partition the disk manually using cfdisk.")
    run_command(f"cfdisk {disk}")

    # Форматирование файловой системы
    fs_type = get_user_input("Enter the filesystem for the root partition (e.g., ext4): ")
    root_partition = get_user_input("Enter the root partition (e.g., /dev/sda1): ")

    # Спрашиваем, нужно ли создавать swap
    create_swap = get_user_input("Do you want to create a swap partition? (1 - Yes, 2 - No): ")
    if create_swap == '1':
        swap_partition = get_user_input("Enter the swap partition (e.g., /dev/sda2): ")
        run_command(f"mkswap {swap_partition}")
        run_command(f"swapon {swap_partition}")

    run_command(f"mkfs.{fs_type} {root_partition}")

    # Монтирование корневого раздела
    run_command(f"mount {root_partition} /mnt")

    # Установка базовой системы
    run_command("pacstrap /mnt base linux linux-firmware")

    # Генерация fstab
    run_command("genfstab -U /mnt >> /mnt/etc/fstab")

    # Chroot в новую систему
    run_command("arch-chroot /mnt /bin/bash")

    # Настройка временной зоны
    timezone = get_user_input("Enter the timezone (e.g., Europe/Moscow): ")
    run_command(f"ln -sf /usr/share/zoneinfo/{timezone} /etc/localtime")
    run_command("hwclock --systohc")

    # Настройка локализации
    locale = get_user_input("Enter the locale (e.g., en_US.UTF-8): ")
    run_command(f"echo '{locale} UTF-8' >> /etc/locale.gen")
    run_command("locale-gen")
    run_command(f"echo 'LANG={locale}' > /etc/locale.conf")

    # Настройка сети
    hostname = get_user_input("Enter the hostname: ")
    run_command(f"echo '{hostname}' > /etc/hostname")
    run_command("echo '127.0.0.1 localhost' >> /etc/hosts")
    run_command(f"echo '127.0.0.1 {hostname}.localdomain {hostname}' >> /etc/hosts")

    # Установка загрузчика
    boot_mode = get_user_input("Choose the boot mode (1 - UEFI, 2 - BIOS): ")
    if boot_mode == '1':
        run_command("pacman -S grub efibootmgr")
        run_command("mkdir -p /boot/efi")
        run_command(f"mount {disk}1 /boot/efi")  # Предполагаем, что первый раздел - EFI
        run_command("grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB")
    else:
        run_command("pacman -S grub")
        run_command(f"grub-install --target=i386-pc {disk}")

    # Генерация конфигурации GRUB
    run_command("grub-mkconfig -o /boot/grub/grub.cfg")

    # Установка дополнительных пакетов
    install_gui = get_user_input("Do you want to install a graphical environment and applications (1 - Yes, 2 - No): ")
    if install_gui == '1':
        run_command("pacman -S xorg sddm xfce4 xfce4-goodies firefox vlc")
        run_command("systemctl enable sddm")

    # Создание пользователя
    username = get_user_input("Enter the username: ")
    user_password = get_user_input("Enter the user password: ")
    run_command(f"useradd -m -G wheel {username}")
    run_command(f"echo '{username}:{user_password}' | chpasswd")

    # Установка пароля root
    root_password = get_user_input("Enter the root password: ")
    run_command(f"echo 'root:{root_password}' | chpasswd")

    print("Installation complete! Please reboot the system.")

if __name__ == "__main__":
    main()
